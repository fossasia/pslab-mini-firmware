/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_UART_LL_H
#define _MOCK_UART_LL_H

#include "unity.h"
#include "uart_ll.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void mock_uart_ll_Init(void);
void mock_uart_ll_Destroy(void);
void mock_uart_ll_Verify(void);




#define UART_LL_init_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("UART_LL_init requires _Ignore (not AndReturn)");
#define UART_LL_init_Ignore() UART_LL_init_CMockIgnore()
void UART_LL_init_CMockIgnore(void);
#define UART_LL_init_StopIgnore() UART_LL_init_CMockStopIgnore()
void UART_LL_init_CMockStopIgnore(void);
#define UART_LL_init_ExpectAndReturn(bus, rx_buf, sz, cmock_retval) TEST_FAIL_MESSAGE("UART_LL_init requires _Expect (not AndReturn)");
#define UART_LL_init_Expect(bus, rx_buf, sz) UART_LL_init_CMockExpect(__LINE__, bus, rx_buf, sz)
void UART_LL_init_CMockExpect(UNITY_LINE_TYPE cmock_line, UART_Bus bus, uint8_t* rx_buf, uint32_t sz);
typedef void (* CMOCK_UART_LL_init_CALLBACK)(UART_Bus bus, uint8_t* rx_buf, uint32_t sz, int cmock_num_calls);
void UART_LL_init_AddCallback(CMOCK_UART_LL_init_CALLBACK Callback);
void UART_LL_init_Stub(CMOCK_UART_LL_init_CALLBACK Callback);
#define UART_LL_init_StubWithCallback UART_LL_init_AddCallback
#define UART_LL_deinit_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("UART_LL_deinit requires _Ignore (not AndReturn)");
#define UART_LL_deinit_Ignore() UART_LL_deinit_CMockIgnore()
void UART_LL_deinit_CMockIgnore(void);
#define UART_LL_deinit_StopIgnore() UART_LL_deinit_CMockStopIgnore()
void UART_LL_deinit_CMockStopIgnore(void);
#define UART_LL_deinit_ExpectAndReturn(bus, cmock_retval) TEST_FAIL_MESSAGE("UART_LL_deinit requires _Expect (not AndReturn)");
#define UART_LL_deinit_Expect(bus) UART_LL_deinit_CMockExpect(__LINE__, bus)
void UART_LL_deinit_CMockExpect(UNITY_LINE_TYPE cmock_line, UART_Bus bus);
typedef void (* CMOCK_UART_LL_deinit_CALLBACK)(UART_Bus bus, int cmock_num_calls);
void UART_LL_deinit_AddCallback(CMOCK_UART_LL_deinit_CALLBACK Callback);
void UART_LL_deinit_Stub(CMOCK_UART_LL_deinit_CALLBACK Callback);
#define UART_LL_deinit_StubWithCallback UART_LL_deinit_AddCallback
#define UART_LL_get_dma_position_Ignore() TEST_FAIL_MESSAGE("UART_LL_get_dma_position requires _IgnoreAndReturn");
#define UART_LL_get_dma_position_IgnoreAndReturn(cmock_retval) UART_LL_get_dma_position_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void UART_LL_get_dma_position_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define UART_LL_get_dma_position_StopIgnore() UART_LL_get_dma_position_CMockStopIgnore()
void UART_LL_get_dma_position_CMockStopIgnore(void);
#define UART_LL_get_dma_position_Expect(bus) TEST_FAIL_MESSAGE("UART_LL_get_dma_position requires _ExpectAndReturn");
#define UART_LL_get_dma_position_ExpectAndReturn(bus, cmock_retval) UART_LL_get_dma_position_CMockExpectAndReturn(__LINE__, bus, cmock_retval)
void UART_LL_get_dma_position_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UART_Bus bus, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_UART_LL_get_dma_position_CALLBACK)(UART_Bus bus, int cmock_num_calls);
void UART_LL_get_dma_position_AddCallback(CMOCK_UART_LL_get_dma_position_CALLBACK Callback);
void UART_LL_get_dma_position_Stub(CMOCK_UART_LL_get_dma_position_CALLBACK Callback);
#define UART_LL_get_dma_position_StubWithCallback UART_LL_get_dma_position_AddCallback
#define UART_LL_tx_busy_Ignore() TEST_FAIL_MESSAGE("UART_LL_tx_busy requires _IgnoreAndReturn");
#define UART_LL_tx_busy_IgnoreAndReturn(cmock_retval) UART_LL_tx_busy_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void UART_LL_tx_busy_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define UART_LL_tx_busy_StopIgnore() UART_LL_tx_busy_CMockStopIgnore()
void UART_LL_tx_busy_CMockStopIgnore(void);
#define UART_LL_tx_busy_Expect(bus) TEST_FAIL_MESSAGE("UART_LL_tx_busy requires _ExpectAndReturn");
#define UART_LL_tx_busy_ExpectAndReturn(bus, cmock_retval) UART_LL_tx_busy_CMockExpectAndReturn(__LINE__, bus, cmock_retval)
void UART_LL_tx_busy_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UART_Bus bus, bool cmock_to_return);
typedef bool (* CMOCK_UART_LL_tx_busy_CALLBACK)(UART_Bus bus, int cmock_num_calls);
void UART_LL_tx_busy_AddCallback(CMOCK_UART_LL_tx_busy_CALLBACK Callback);
void UART_LL_tx_busy_Stub(CMOCK_UART_LL_tx_busy_CALLBACK Callback);
#define UART_LL_tx_busy_StubWithCallback UART_LL_tx_busy_AddCallback
#define UART_LL_start_dma_tx_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("UART_LL_start_dma_tx requires _Ignore (not AndReturn)");
#define UART_LL_start_dma_tx_Ignore() UART_LL_start_dma_tx_CMockIgnore()
void UART_LL_start_dma_tx_CMockIgnore(void);
#define UART_LL_start_dma_tx_StopIgnore() UART_LL_start_dma_tx_CMockStopIgnore()
void UART_LL_start_dma_tx_CMockStopIgnore(void);
#define UART_LL_start_dma_tx_ExpectAndReturn(bus, buffer, size, cmock_retval) TEST_FAIL_MESSAGE("UART_LL_start_dma_tx requires _Expect (not AndReturn)");
#define UART_LL_start_dma_tx_Expect(bus, buffer, size) UART_LL_start_dma_tx_CMockExpect(__LINE__, bus, buffer, size)
void UART_LL_start_dma_tx_CMockExpect(UNITY_LINE_TYPE cmock_line, UART_Bus bus, uint8_t* buffer, uint32_t size);
typedef void (* CMOCK_UART_LL_start_dma_tx_CALLBACK)(UART_Bus bus, uint8_t* buffer, uint32_t size, int cmock_num_calls);
void UART_LL_start_dma_tx_AddCallback(CMOCK_UART_LL_start_dma_tx_CALLBACK Callback);
void UART_LL_start_dma_tx_Stub(CMOCK_UART_LL_start_dma_tx_CALLBACK Callback);
#define UART_LL_start_dma_tx_StubWithCallback UART_LL_start_dma_tx_AddCallback
#define UART_LL_set_tx_complete_callback_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("UART_LL_set_tx_complete_callback requires _Ignore (not AndReturn)");
#define UART_LL_set_tx_complete_callback_Ignore() UART_LL_set_tx_complete_callback_CMockIgnore()
void UART_LL_set_tx_complete_callback_CMockIgnore(void);
#define UART_LL_set_tx_complete_callback_StopIgnore() UART_LL_set_tx_complete_callback_CMockStopIgnore()
void UART_LL_set_tx_complete_callback_CMockStopIgnore(void);
#define UART_LL_set_tx_complete_callback_ExpectAndReturn(bus, callback, cmock_retval) TEST_FAIL_MESSAGE("UART_LL_set_tx_complete_callback requires _Expect (not AndReturn)");
#define UART_LL_set_tx_complete_callback_Expect(bus, callback) UART_LL_set_tx_complete_callback_CMockExpect(__LINE__, bus, callback)
void UART_LL_set_tx_complete_callback_CMockExpect(UNITY_LINE_TYPE cmock_line, UART_Bus bus, UART_LL_TxCompleteCallback callback);
typedef void (* CMOCK_UART_LL_set_tx_complete_callback_CALLBACK)(UART_Bus bus, UART_LL_TxCompleteCallback callback, int cmock_num_calls);
void UART_LL_set_tx_complete_callback_AddCallback(CMOCK_UART_LL_set_tx_complete_callback_CALLBACK Callback);
void UART_LL_set_tx_complete_callback_Stub(CMOCK_UART_LL_set_tx_complete_callback_CALLBACK Callback);
#define UART_LL_set_tx_complete_callback_StubWithCallback UART_LL_set_tx_complete_callback_AddCallback
#define UART_LL_set_rx_complete_callback_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("UART_LL_set_rx_complete_callback requires _Ignore (not AndReturn)");
#define UART_LL_set_rx_complete_callback_Ignore() UART_LL_set_rx_complete_callback_CMockIgnore()
void UART_LL_set_rx_complete_callback_CMockIgnore(void);
#define UART_LL_set_rx_complete_callback_StopIgnore() UART_LL_set_rx_complete_callback_CMockStopIgnore()
void UART_LL_set_rx_complete_callback_CMockStopIgnore(void);
#define UART_LL_set_rx_complete_callback_ExpectAndReturn(bus, callback, cmock_retval) TEST_FAIL_MESSAGE("UART_LL_set_rx_complete_callback requires _Expect (not AndReturn)");
#define UART_LL_set_rx_complete_callback_Expect(bus, callback) UART_LL_set_rx_complete_callback_CMockExpect(__LINE__, bus, callback)
void UART_LL_set_rx_complete_callback_CMockExpect(UNITY_LINE_TYPE cmock_line, UART_Bus bus, UART_LL_RxCompleteCallback callback);
typedef void (* CMOCK_UART_LL_set_rx_complete_callback_CALLBACK)(UART_Bus bus, UART_LL_RxCompleteCallback callback, int cmock_num_calls);
void UART_LL_set_rx_complete_callback_AddCallback(CMOCK_UART_LL_set_rx_complete_callback_CALLBACK Callback);
void UART_LL_set_rx_complete_callback_Stub(CMOCK_UART_LL_set_rx_complete_callback_CALLBACK Callback);
#define UART_LL_set_rx_complete_callback_StubWithCallback UART_LL_set_rx_complete_callback_AddCallback
#define UART_LL_set_idle_callback_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("UART_LL_set_idle_callback requires _Ignore (not AndReturn)");
#define UART_LL_set_idle_callback_Ignore() UART_LL_set_idle_callback_CMockIgnore()
void UART_LL_set_idle_callback_CMockIgnore(void);
#define UART_LL_set_idle_callback_StopIgnore() UART_LL_set_idle_callback_CMockStopIgnore()
void UART_LL_set_idle_callback_CMockStopIgnore(void);
#define UART_LL_set_idle_callback_ExpectAndReturn(bus, callback, cmock_retval) TEST_FAIL_MESSAGE("UART_LL_set_idle_callback requires _Expect (not AndReturn)");
#define UART_LL_set_idle_callback_Expect(bus, callback) UART_LL_set_idle_callback_CMockExpect(__LINE__, bus, callback)
void UART_LL_set_idle_callback_CMockExpect(UNITY_LINE_TYPE cmock_line, UART_Bus bus, UART_LL_IdleCallback callback);
typedef void (* CMOCK_UART_LL_set_idle_callback_CALLBACK)(UART_Bus bus, UART_LL_IdleCallback callback, int cmock_num_calls);
void UART_LL_set_idle_callback_AddCallback(CMOCK_UART_LL_set_idle_callback_CALLBACK Callback);
void UART_LL_set_idle_callback_Stub(CMOCK_UART_LL_set_idle_callback_CALLBACK Callback);
#define UART_LL_set_idle_callback_StubWithCallback UART_LL_set_idle_callback_AddCallback

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
